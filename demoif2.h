/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -c DemoDbusIface2 -p demoif2.h:demoif2.cpp .\cn.kylinos.dbusdemoiface2.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef DEMOIF2_H
#define DEMOIF2_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface cn.kylinos.dbus.demo2
 */
class DemoDbusIface2: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "cn.kylinos.dbus.demo2"; }

public:
    DemoDbusIface2(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~DemoDbusIface2();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> decrease()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("decrease"), argumentList);
    }

    inline QDBusPendingReply<> increase()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("increase"), argumentList);
    }

    inline QDBusPendingReply<> reset()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("reset"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace cn {
  namespace kylinos {
    namespace dbus {
      typedef ::DemoDbusIface2 demo2;
    }
  }
}
#endif
